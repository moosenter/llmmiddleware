apiVersion: v1
kind: Namespace
metadata:
  name: middleware-namespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: middleware-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: middleware-frontend:latest # Replace with your built image
          ports:
            - containerPort: 8501
          env:
            - name: API_URL
              value: "http://backend:8000"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: middleware-namespace
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 8501
      targetPort: 8501
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: middleware-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: middleware-backend:latest # Replace with your built image
          ports:
            - containerPort: 8000
          env:
            - name: MINIO_URL
              value: "http://minio:9000"
            - name: MILVUS_URL
              value: "http://standalone:19530"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: middleware-namespace
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: middleware-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: middleware-namespace
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: etcd
  namespace: middleware-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: etcd
  template:
    metadata:
      labels:
        app: etcd
    spec:
      containers:
        - name: etcd
          image: quay.io/coreos/etcd:v3.5.0
          command: ["etcd", "-advertise-client-urls=http://0.0.0.0:2379", "-listen-client-urls=http://0.0.0.0:2379", "--data-dir=/etcd"]
          ports:
            - containerPort: 2379
          volumeMounts:
            - name: etcd-data
              mountPath: /etcd
      volumes:
        - name: etcd-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: etcd-service
  namespace: middleware-namespace
spec:
  selector:
    app: etcd
  ports:
    - protocol: TCP
      port: 2379
      targetPort: 2379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: middleware-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: minio/minio:RELEASE.2020-12-03T00-03-10Z
          command: ["minio", "server", "/minio_data"]
          ports:
            - containerPort: 9000
          env:
            - name: MINIO_ACCESS_KEY
              value: "minioadmin"
            - name: MINIO_SECRET_KEY
              value: "minioadmin"
          volumeMounts:
            - name: minio-data
              mountPath: /minio_data
      volumes:
        - name: minio-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: middleware-namespace
spec:
  selector:
    app: minio
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: standalone
  namespace: middleware-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: standalone
  template:
    metadata:
      labels:
        app: standalone
    spec:
      containers:
        - name: standalone
          image: milvusdb/milvus:latest
          command: ["milvus", "run", "standalone"]
          ports:
            - containerPort: 19530
          env:
            - name: ETCD_ENDPOINTS
              value: "etcd:2379"
            - name: MINIO_ADDRESS
              value: "minio:9000"
          volumeMounts:
            - name: milvus-data
              mountPath: /var/lib/milvus
      volumes:
        - name: milvus-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: standalone-service
  namespace: middleware-namespace
spec:
  selector:
    app: standalone
  ports:
    - protocol: TCP
      port: 19530
      targetPort: 19530
  type: NodePort
