version: '3'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - DB_URL=db
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_PORT=5432
      - DB_NAME=mydatabase
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./:/app
      - ./data_storage:/app/data_storage
      - ./llmmiddleware:/app/llmmiddleware
      - ./config:/app/config
    networks:
      - app-network
    depends_on:
      - db
    restart: always

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "8501:8501"
    environment:
      - PYTHONUNBUFFERED=1
      - API_URL=http://backend:8000
    volumes:
      - ./:/app
      - ./data_storage:/app/data_storage
      - ./llmmiddleware:/app/llmmiddleware
      - ./config:/app/config
    networks:
      - app-network
    depends_on:
      - backend
    restart: always

  db:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: always

  vector_db:
    image: milvusdb/milvus:v2.3.3
    ports:
      - "19530:19530"
      - "9091:9091"
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
    volumes:
      - milvus_data:/var/lib/milvus
    networks:
      - app-network
    depends_on:
      - etcd
      - minio
    command: ["milvus", "run", "standalone"]
    restart: always

  etcd:
    image: quay.io/coreos/etcd:v3.5.0
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
    volumes:
      - etcd_data:/etcd
    networks:
      - app-network
    command: ["etcd", "--advertise-client-urls=http://etcd:2379", "--listen-client-urls=http://0.0.0.0:2379", "--data-dir=/etcd"]
    restart: always

  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    volumes:
      - minio_data:/data
    networks:
      - app-network
    command: ["minio", "server", "/data", "--console-address", ":9001"]
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  milvus_data:
  etcd_data:
  minio_data:
